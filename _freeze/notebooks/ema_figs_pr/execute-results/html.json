{
  "hash": "0eed23bf951dee4bd0be3f66d338c2fd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"EMA study PR Curves\"\nauthor: \"John Curtin\"\neditor_options: \n  chunk_output_type: console\n---\n\n## Set up environment\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\n\nlibrary(tidyverse, quietly = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ntheme_set(theme_classic()) \n\n# Paths\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\",\n                     sha1 = \"a58e57da996d1b70bb9a5b58241325d6fd78890f\")\npath_models <- format_path(\"studydata/risk/models/ema\")\npath_data_shared <- format_path(\"studydata/risk/data_processed/shared\")\npath_data_ema <- format_path(\"studydata/risk/data_processed/ema\")\n```\n:::\n\n\n## Open preds dfs\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npreds_week<- read_rds(file.path(path_models, \n                               \"outer_preds_1week_0_v5_nested_main.rds\"))\npreds_day<- read_rds(file.path(path_models, \n                              \"outer_preds_1day_0_v5_nested_main.rds\"))\npreds_hour<- read_rds(file.path(path_models, \n                               \"outer_preds_1hour_0_v5_nested_main.rds\"))\n```\n:::\n\n\n## Generate PR curves\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npr_week <- preds_week |> \n  yardstick::pr_curve(prob_beta, truth = label) |> \n  mutate(model = \"1week\")\n\npr_day <- preds_day |> \n  yardstick::pr_curve(prob_beta, truth = label) |> \n  mutate(model = \"1day\")\n\npr_hour <- preds_hour|> \n  yardstick::pr_curve(prob_beta, truth = label) |> \n  mutate(model = \"1hour\")\n\npr_all <- pr_week |> \n  bind_rows(pr_day) |> \n  bind_rows(pr_hour) |> \n  mutate(thres_avg = round(.threshold, 3)) |> \n  group_by(model, thres_avg) |> \n  reframe(recall = mean(recall), precision =  mean(precision)) |> \n  mutate(model = factor(model, levels = c(\"1week\", \"1day\", \"1hour\"),\n                        labels = c(\"week\", \"day\", \"hour\")))\n```\n:::\n\n\n### Plot PR Curve\n\n\n::: {#cell-fig-prcurve .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-prcurve\n#| fig-cap: PR Curves by Model\n#| fig-height: 6\n#| fig-width: 6\n\npr_all |>\n  ggplot(aes(x = recall, y = precision, color = model)) +\n  geom_path(size = 1.25) +\n  coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +\n  labs(x = \"Sensitivity (Recall)\",\n       y = \"Positive Predictive Value (Precision)\") +\n  scale_color_manual(values = c(\"orange\",\"green\",\"blue\")) +\n  geom_hline(yintercept = .70, color = \"black\", size = 1, linetype = \"dotted\") +\n  geom_segment(x = .72, y = -.05 , xend = .72, yend = .70,\n               color = \"orange\", size = 1, linetype = \"dotted\") +\n  geom_segment(x = .47, y = -.05 , xend = .47, yend = .70,\n               color = \"green\", size = 1, linetype = \"dotted\") +\n  geom_segment(x = .33, y = -.05 , xend = .33, yend = .70,\n               color = \"blue\", size = 1, linetype = \"dotted\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![PR Curves by Model](ema_figs_pr_files/figure-html/fig-prcurve-1.png){#fig-prcurve width=576}\n:::\n:::",
    "supporting": [
      "ema_figs_pr_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}