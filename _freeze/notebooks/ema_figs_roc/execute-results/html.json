{
  "hash": "526d2069db0481cf68ddb206ec5e3c37",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"EMA ROCs\"\nauthor: \"John Curtin\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n## Set up environment\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\n\nlibrary(tidyverse, quietly = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ntheme_set(theme_classic()) \n\n# Paths\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npath_models <- format_path(\"studydata/risk/models/ema\")\npath_data_shared <- format_path(\"studydata/risk/data_processed/shared\")\npath_data_ema <- format_path(\"studydata/risk/data_processed/ema\")\n```\n:::\n\n\n## Open preds dfs\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npreds_week<- read_rds(file.path(path_models, \n                               \"outer_preds_1week_0_v5_nested_main.rds\"))\npreds_day<- read_rds(file.path(path_models, \n                              \"outer_preds_1day_0_v5_nested_main.rds\"))\npreds_hour<- read_rds(file.path(path_models, \n                               \"outer_preds_1hour_0_v5_nested_main.rds\"))\n```\n:::\n\n\n## Open metrics for text labels of auROC\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmetrics_week <- read_csv(file.path(path_models, \n                                   \"test_metrics_1week_0_v5_nested.csv\"),\n                         col_types = cols())\nmetrics_day <- read_csv(file.path(path_models, \n                                  \"test_metrics_1day_0_v5_nested.csv\"),\n                        col_types = cols())\nmetrics_hour <- read_csv(file.path(path_models, \n                                   \"test_metrics_1hour_0_v5_nested.csv\"),\n                         col_types = cols())\n\nauROC <- metrics_week |> \n  mutate(model = \"week\") |> \n  bind_rows(metrics_day |> \n              mutate(model = \"day\")) |> \n  bind_rows(metrics_hour |> \n              mutate(model = \"hour\")) |> \n  filter(.metric == \"roc_auc\") |>\n  select(-.metric) |> \n  group_by(model) |> \n  summarize(median = median(.estimate), .groups = \"drop\") |> \n  mutate(median = round(median, 2)) |> \n  pivot_wider(names_from = model, values_from = median) |> \n  select(week, day, hour)\n```\n:::\n\n\n## Generate ROC Curves\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nroc_week <- preds_week |> \n  yardstick::roc_curve(prob_beta, truth = label) |> \n  mutate(model = \"1week\")\n  \nroc_day <- preds_day |> \n  yardstick::roc_curve(prob_beta, truth = label) |> \n  mutate(model = \"1day\")\n\nroc_hour <- preds_hour|> \n  yardstick::roc_curve(prob_beta, truth = label) |> \n  mutate(model = \"1hour\")\n\nroc_all <- roc_week |> \n  bind_rows(roc_day) |> \n  bind_rows(roc_hour) |> \n  mutate(thres_avg = round(.threshold, 3)) |> \n  group_by(model, thres_avg) |> \n  reframe(sensitivity = mean(sensitivity), specificity =  mean(specificity)) |> \n  mutate(model = factor(model, levels = c(\"1week\", \"1day\", \"1hour\"),\n                        labels = c(\"week\", \"day\", \"hour\")))\n\nauROC_week <- auROC$week |>\n  as.character() |>\n  str_pad(width = 4, side = \"right\", pad = \"0\")\n\nauROC_day <- auROC$day |>\n  as.character() |>\n  str_pad(width = 4, side = \"right\", pad = \"0\")\n\nauROC_hour <- auROC$hour |>\n  as.character() |>\n  str_pad(width = 4, side = \"right\", pad = \"0\")\n```\n:::\n\n\n## ROC Plot Function\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplot_roc <- function(df){\n  df |> \n  ggplot(aes(x = 1 - specificity, y = sensitivity, color = model)) +\n    geom_path(linewidth = 1.25) +\n    geom_abline(lty = 3) +\n    coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +\n    labs(x = \"Specificity\",\n        y = \"Sensitivity\") +\n  scale_x_continuous(breaks = seq(0,1,.25),\n    labels = sprintf(\"%.2f\", seq(1,0,-.25)))  +\n  scale_color_manual(values = c(\"orange\",\"green\",\"blue\"))\n}\n```\n:::\n\n\n\n## ROC plots for combos of models\n\nWeek only\n\n::: {#cell-fig-roc-week .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-roc-week\n#| fig-cap: ROC Curves by Model\n#| fig-height: 6\n#| fig-width: 6\n\nroc_all |>\n  filter(model == \"week\") |>\n  plot_roc() +\n  geom_text(x = .80, y = .20,\n            label = str_c(\"AUC = \", auROC_week),\n            show.legend = FALSE, color = \"orange\")\n```\n\n::: {.cell-output-display}\n![ROC Curves by Model](ema_figs_roc_files/figure-html/fig-roc-week-1.png){#fig-roc-week width=576}\n:::\n:::\n\n\nWeek & Day\n\n::: {#cell-fig-roc-week_day .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-roc-week_day\n#| fig-cap: ROC Curves by Model\n#| fig-height: 6\n#| fig-width: 6\n\nroc_all |>\n  filter(model == \"week\" | model == \"day\") |>\n  plot_roc() +\n  geom_text(x = .80, y = .20,\n            label = str_c(\"AUC = \", auROC_week),\n            show.legend = FALSE, color = \"orange\") +\n  geom_text(x = .80, y = .15,\n            label = str_c(\"AUC = \", auROC_day),\n            show.legend = FALSE, color = \"green\")\n```\n\n::: {.cell-output-display}\n![ROC Curves by Model](ema_figs_roc_files/figure-html/fig-roc-week_day-1.png){#fig-roc-week_day width=576}\n:::\n:::\n\n\nAll three windows\n\n::: {#cell-fig-roc-all .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-roc-all\n#| fig-cap: ROC Curves by Model\n#| fig-height: 6\n#| fig-width: 6\n\nroc_all |>\n  plot_roc() +\n  geom_text(x = .80, y = .20,\n            label = str_c(\"AUC = \", auROC_week),\n            show.legend = FALSE, color = \"orange\") +\n  geom_text(x = .80, y = .15,\n            label = str_c(\"AUC = \", auROC_day),\n            show.legend = FALSE, color = \"green\") +\n  geom_text(x = .80, y = .10,\n            label = str_c(\"AUC = \", auROC_hour),\n            show.legend = FALSE, color = \"blue\")\n```\n\n::: {.cell-output-display}\n![ROC Curves by Model](ema_figs_roc_files/figure-html/fig-roc-all-1.png){#fig-roc-all width=576}\n:::\n:::",
    "supporting": [
      "ema_figs_roc_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}