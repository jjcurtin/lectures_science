---
title: "Risk1 probability plots"
author: "John Curtin"
editor_options: 
  chunk_output_type: console
---

## Overview

This script makes faceted histograms that display the probabilities of lapse separately for true lapse and no lapse observations.  

The data are from the EMA study based on RISK1 project

## Set up environment
```{r}
# handle conflicts
options(conflicts.policy = "depends.ok")

library(tidyverse)
theme_set(theme_classic()) 

# Paths
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true",
                     sha1 = "a58e57da996d1b70bb9a5b58241325d6fd78890f")
# source("../../lab_support/format_path.R")
path_models <- format_path("studydata/risk/models/ema")
path_data_shared <- format_path("studydata/risk/data_processed/shared")
path_data_ema <- format_path("studydata/risk/data_processed/ema")
```

## Open preds dfs

```{r}
#| label: Load predictions files

preds_week <- read_rds(file.path(path_models, 
                               "outer_preds_1week_0_v5_nested_main.rds"))
preds_day <- read_rds(file.path(path_models, 
                              "outer_preds_1day_0_v5_nested_main.rds"))
preds_hour <- read_rds(file.path(path_models, 
                               "outer_preds_1hour_0_v5_nested_main.rds")) 
```


## Function for faceted probability plot

```{r}
plot_probs <- function(df_preds, model) {
  bar_color <- 
    case_when(
      tolower(model) == "week" ~ "orange",
      tolower(model) == "day" ~ "green",
      tolower(model) == "hour" ~ "blue",
    )
  df_preds |> 
    ggplot(data = _, aes(x = prob_beta)) + 
     geom_histogram(bins = 15, fill = bar_color, col = "black", alpha = .4) +
     facet_wrap(~label, nrow = 2, scales = "free_y") +
     xlab("P(Lapse | X)") +
    scale_y_continuous(labels = scales::comma)
}
``` 
  
 
# Faceted Plots

One week window with no vertical line for decision threshold
```{r}
#| label: fig-week-no_dec_thres
#| fig-cap: P(Lapse | X) by Truth - Week
#| fig-height: 6
#| fig-width: 6

fig_week <- preds_week |> 
  plot_probs("week")

fig_week
```

One week window with vertical line for default decision threshold
```{r}
#| label: fig-week
#| fig-cap: P(Lapse | X) by Truth - Day 
#| fig-height: 6
#| fig-width: 6

fig_week +
  geom_vline(xintercept = .5, color = "red", size = 2)
```

One day window with vertical line for default decision threshold
```{r}
#| label: fig-day
#| fig-cap: P(Lapse | X) by Truth - Hour 
#| fig-height: 6
#| fig-width: 6

fig_day <- preds_day |> 
 plot_probs("day")
 
fig_day +
   geom_vline(xintercept = .5, color = "red", linewidth = 2)
```

One day window with vertical line for high (p = 0.9) decision threshold
```{r}
#| label: fig-day-high_dec_thres
#| fig-cap: Lapse Probability by Truth - Day
#| fig-height: 6
#| fig-width: 6

fig_day +
  geom_vline(xintercept = .9, color = "red", linewidth = 2)
```


# Calibration plots

```{r}
#| label: calibration_plot_hour 
#| out-height: 6in
#| out-width: 6in

preds_hour |> 
  mutate(bins = cut(prob_beta, breaks = seq(0, 1, .125)),
         lapse = if_else(label == "Lapse", 1, 0)) |> 
  group_by(bins)  |> 
  summarize(mean_lapse = mean(lapse),
            .groups = "drop") |>
  mutate(bins = as.numeric(bins),
         midpoints = .125/2 + .125 * (bins - 1))  |> 
  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +
    geom_abline(slope = 1, intercept = 0, linetype = "dotted") +
    geom_line() +
    geom_point() +
    xlab("Predicted Lapse Probability (bin mid-point)") +
    ylab("Observed Lapse Probability") +
    scale_x_continuous(breaks = seq(0, 1, .125),
                        limits = c(0,1)) +
    scale_y_continuous(breaks = seq(0, 1, .125),
                        limits = c(0,1))
```